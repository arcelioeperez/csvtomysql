#!/usr/bin/env python3 

""" 
-----------------------------
Make it an executable: 
chmod +x tomysqlv2-1 

Run it with: 
./tomysqlv2-1
-----------------------------
User input: 
filename 
username
password
host 
database 
table name for the database
"""

import sqlalchemy
import pandas as pd
import pymysql
from sqlalchemy import create_engine

class Csv:
    def __init__(self, file_name):
        self.file_name = file_name
        global data
        data = pd.read_csv(self.file_name)
        global headers
        headers = data.dtypes.index

    def table_columns(self):
        stmt = "id INT AUTO_INCREMENT PRIMARY KEY"
        tmap = {'object' : 'TEXT',
        'int64' : 'INT',
        'float64' : 'FLOAT',
        'datetime64' : 'DATETIME',
        'bool' : 'TINYINT',
        'category' : 'TEXT',
        'timedelta[ns]' : 'TEXT'}
        headers_list = [(i, str(data.dtypes[i])) for i in headers]
        for i, h1 in enumerate(headers_list):
            stmt += f", {h1[0]} {tmap[h1[1]]}"
        return stmt
class MysqlConnection:
    def __init__(self, user, password, host, database):
        self.user = user
        self.password = password
        self.host = host
        self.database = database
    def create_table(self, table_name):
        self.table_name = table_name
        self.sql = f"CREATE TABLE IF NOT EXISTS {table_name} ({Csv.table_columns(self)});"
        return self.sql
    def cur_conn(self):
        self.sql_engine=create_engine(f"mysql+pymysql://{self.user}:{self.password}@{self.host}/{self.database}")
        connection = self.sql_engine.raw_connection()
        cursor = connection.cursor()
        execute = cursor.execute(self.sql)
        cursor.close()
        connection.commit()
    def df_to_sql(self, file_name):
        df = pd.read_csv(file_name, delimiter = ",", header = None)
        df.to_sql(self.table_name, con = self.sql_engine, if_exists = "replace", index = False, index_label = False)

#Sample Case
while True:
    try:
        file_name = str(input("Enter the filename: ")) 
        #Csv Class
        start = Csv(file_name)	
        #Creating table_columns 
        start.table_columns() 
        u = str(input("Please enter your MySQL username: "))
        p = str(input("Please enter your MySQL password: "))
        host = str(input("Please enter your host i.e localhost: "))
        db = str(input("Please enter the database name: "))
        t = str(input("Please enter the table name: "))
        #MysqlConnection Class
        user = MysqlConnection(user = u, password = p, host = host, database = db)
        #Create table
        user.create_table(table_name = t)
        #Connection 
        user.cur_conn()
        #DF to MYSQL 
        user.df_to_sql(file_name)
        
        print("Your file has been transferred")
        quit = input("Press q to quit: ")
        if quit == "q": 
            break
        else: 
            continue 
    except:
        print("There has been an error with the information that you entered.")
        out = input("If you would like to quit, press q: ")
        if out == "q":
            break
        else:
            continue
